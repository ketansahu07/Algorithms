// partition a given array in such a way that the difference between the sum of two subarrays is minimum
// https://practice.geeksforgeeks.org/problems/minimum-sum-partition/0/

#include <bits/stdc++.h>
using namespace std;

int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    int a[n];
	    int sum=0;
	    for(int i=0;i<n;i++)
	    {
	        cin>>a[i];
	        sum+=a[i];
	    }
	
	    bool dp[n+1][sum+1];
	    memset(dp,0,sizeof(dp));
	    
	    for(int i=1;i<=sum;i++)
	        dp[0][i]=0;
	    for(int i=0;i<=n;i++)
	        dp[i][0]=1;
	        
	    for(int i=1;i<=n;i++)
	    {
	        for(int j=1;j<=sum;j++)
	        {
	            dp[i][j]=dp[i-1][j];
	            
	            if(a[i-1]<=j)
	            {
	                dp[i][j] |= dp[i-1][j-a[i-1]];
	            }
	        }
	    }
	    
	    int diff=INT_MAX;
	    
	    for(int j=sum/2;j>=0;j--)
	    {
	        if(dp[n][j]==1)
	        {
	            diff=sum-j*2;
	            break;
	        }
	    }
	    
	    cout<<diff<<endl;
	}
	return 0;
}