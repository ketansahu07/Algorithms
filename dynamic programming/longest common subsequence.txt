// https://practice.geeksforgeeks.org/problems/longest-common-subsequence/0

#include<bits/stdc++.h>
using namespace std;
#define ll long long int

ll LCS(ll n, ll m,char* s1,char* s2)
{
    ll dp[n+1][m+1];
    for(int i=0;i<=n;i++)
        dp[i][0]=0;
    for(int j=0;j<=m;j++)
        dp[0][j]=0;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            if(*(s1+i-1)!=*(s2+j-1))
                dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
            else
                dp[i][j]=dp[i-1][j-1]+1;
        }
    }
    return dp[n][m];
}

int main()
{
    ll t;
    cin>>t;
    while(t--)
    {
        ll n,m;
        cin>>n>>m;
        char s1[n+1],s2[m+1];
        cin>>s1>>s2;
        cout<<LCS(n,m,s1,s2)<<endl;
    }
    return 0;
}
