// https://practice.geeksforgeeks.org/problems/nth-number-made-of-prime-digits/0/?track=SPC-Strings&batchId=154
// https://www.geeksforgeeks.org/finding-n-th-number-made-prime-digits/
==========================================================================================================
#include <iostream>
using namespace std;

int main() {
	int t;
	cin>>t;
	int dict[101]={0};
	int k=1;
	int start;
	for(start=2;k<101;start++)
	{
	    int flag=0;
	    int temp=start;
	    while(temp)
	    {
	        int rem=temp%10;
	        if(rem==2||rem==3||rem==5||rem==7)
	            temp=temp/10;
            else
            {
                flag=1;
                break;
            }
	    }
	    if(flag==0)
	        dict[k++]=start;
	}
	while(t--)
	{
	    int n;
	    cin>>n;
	    cout<<dict[n]<<endl;
	}
	return 0;
}
=========================================================================================================
better sloution using the position of the number in the tree.
since there can only be 4 different positions (open the second link above to see the explanation)
=========================================================================================================
// CPP program to find n-th number with 
// prime digits 2, 3 and 7 
#include <algorithm> 
#include <iostream> 
#include <string> 
using namespace std; 

string nthprimedigitsnumber(int number) 
{ 
	int rem; 
	string num; 
	while (number) { 
		// remainder for check element position 
		rem = number % 4; 
		switch (rem) { 

		// if number is 1st position in tree 
		case 1: 
			num.push_back('2'); 
			break; 

		// if number is 2nd position in tree 
		case 2: 
			num.push_back('3'); 
			break; 

		// if number is 3rd position in tree 
		case 3: 
			num.push_back('5'); 
			break; 

		// if number is 4th position in tree 
		case 0: 
			num.push_back('7'); 
			break; 
		} 

		number = number / 4; 
	} 
	reverse(num.begin(), num.end()); 
	return num; 
} 

// Driver code 
int main() 
{ 
	int number = 21; 
	cout << nthprimedigitsnumber(10) << "\n"; 
	cout << nthprimedigitsnumber(21) << "\n"; 
	return 0; 
	a 
} 
